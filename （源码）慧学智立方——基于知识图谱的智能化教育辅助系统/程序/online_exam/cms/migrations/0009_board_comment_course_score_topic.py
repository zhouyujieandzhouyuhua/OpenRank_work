# Generated by Django 3.2.2 on 2024-07-05 12:37

from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('cms', '0008_record_answer'),
    ]

    operations = [
        migrations.CreateModel(
            name='Board',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
            ],
            options={
                'db_table': 'boards',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('image_url', models.URLField()),
                ('video_url', models.URLField()),
                ('instructor', models.CharField(max_length=100)),
                ('detail_page_url', models.URLField()),
                ('chapter', models.URLField()),
                ('gonggao_context', models.CharField(max_length=255)),
                ('video_1', models.URLField(blank=True)),
                ('video1_name', models.CharField(blank=True, max_length=200)),
                ('video1_date', models.DateTimeField(blank=True, null=True)),
                ('video_1_students', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=list, null=True)),
                ('video_2', models.URLField(blank=True)),
                ('video2_name', models.CharField(blank=True, max_length=200)),
                ('video2_date', models.DateTimeField(blank=True, null=True)),
                ('video_2_students', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=list, null=True)),
                ('video_3', models.URLField(blank=True)),
                ('video3_name', models.CharField(blank=True, max_length=200)),
                ('video3_date', models.DateTimeField(blank=True, null=True)),
                ('video_3_students', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=list, null=True)),
                ('video_4', models.URLField(blank=True)),
                ('video4_name', models.CharField(blank=True, max_length=200)),
                ('video4_date', models.DateTimeField(blank=True, null=True)),
                ('video_4_students', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=list, null=True)),
                ('video_5', models.URLField(blank=True)),
                ('video5_name', models.CharField(blank=True, max_length=200)),
                ('video5_date', models.DateTimeField(blank=True, null=True)),
                ('video_5_students', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=list, null=True)),
                ('test_score', models.JSONField(default=list, verbose_name='测试成绩')),
            ],
            options={
                'db_table': 'course',
            },
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_number', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=50)),
                ('total_score', models.IntegerField()),
                ('subject', models.CharField(max_length=20)),
                ('time', models.DateTimeField()),
                ('question_1', models.IntegerField()),
                ('question_2', models.IntegerField()),
                ('question_3', models.IntegerField()),
                ('question_4', models.IntegerField()),
                ('question_5', models.IntegerField()),
                ('question_6', models.IntegerField()),
                ('question_7', models.IntegerField()),
                ('question_8', models.IntegerField()),
                ('question_9', models.IntegerField()),
                ('question_10', models.IntegerField()),
                ('question_11', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('module', models.CharField(max_length=100)),
                ('initiator', models.CharField(max_length=100)),
                ('initiation_time', models.DateTimeField(auto_now_add=True)),
                ('anonymous', models.BooleanField(default=False)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cms.course')),
            ],
            options={
                'db_table': 'topics',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('comment_time', models.DateTimeField(auto_now_add=True)),
                ('commenter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('reply_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='cms.comment')),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='cms.topic')),
            ],
            options={
                'db_table': 'comment',
            },
        ),
    ]
